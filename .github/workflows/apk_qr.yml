name: Build and Release APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.3'
          channel: 'stable'
          cache: true

      - name: Fix Android project structure
        run: |
          # Create a temporary Flutter project with the correct structure
          mkdir -p temp_project
          cd temp_project
          flutter create --project-name waterwise --org com.example.waterwise temp_app
          cd ..
          
          # Make the fix script executable
          chmod +x fix_gradle_project.sh
          
          # Run the fix script
          ./fix_gradle_project.sh

      - name: Create local.properties
        run: |
          echo "flutter.sdk=$FLUTTER_HOME" > android/local.properties
          echo "sdk.dir=$ANDROID_SDK_ROOT" >> android/local.properties

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: |
          flutter build apk --release
          APK_PATH=build/app/outputs/flutter-apk/app-release.apk
          echo "APK_PATH=${APK_PATH}" >> $GITHUB_ENV
          echo "APK_NAME=WaterWise.apk" >> $GITHUB_ENV
          # Rename the APK
          if [ -f "$APK_PATH" ]; then
            mv "$APK_PATH" "build/app/outputs/flutter-apk/WaterWise.apk"
            echo "APK_PATH=build/app/outputs/flutter-apk/WaterWise.apk" >> $GITHUB_ENV
          fi

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: WaterWise-APK
          path: ${{ env.APK_PATH }}
          retention-days: 30

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ${{ env.APK_PATH }}
          tag_name: v1.0.${{ github.run_number }}
          name: WaterWise v1.0.${{ github.run_number }}
          body: |
            WaterWise App - Build ${{ github.run_number }}
            Commit: ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Generate QR Code for Download
        run: |
          sudo apt-get update
          sudo apt-get install -y qrencode imagemagick
          QR_URL="https://github.com/${{ github.repository }}/releases/download/v1.0.${{ github.run_number }}/${{ env.APK_NAME }}"
          qrencode -o qr_temp.png "$QR_URL"
          convert qr_temp.png -gravity south -pointsize 20 -annotate +0+10 "WaterWise App" qr_apk.png
          rm qr_temp.png
          echo "Download APK: $QR_URL" >> $GITHUB_STEP_SUMMARY

      - name: Upload QR Code Artifact
        uses: actions/upload-artifact@v4
        with:
          name: WaterWise-QR-v1.0.${{ github.run_number }}
          path: qr_apk.png
          retention-days: 30 