name: Build APK, Upload, and Generate QR

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write
  actions: write
  checks: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.3'
          channel: 'stable'
          cache: true

      - name: Create local.properties
        run: |
          echo "flutter.sdk=$FLUTTER_HOME" > android/local.properties
          echo "sdk.dir=$ANDROID_SDK_ROOT" >> android/local.properties

      - name: Make Gradle wrapper executable
        run: chmod +x android/gradlew

      - name: Check and fix directory structure
        run: |
          pwd
          echo "Current directory structure:"
          ls -la
          echo "Android directory structure:"
          ls -la android/
          echo "App directory structure:"
          ls -la android/app/
          echo "Src/main directory structure:"
          ls -la android/app/src/main/
          echo "Manifest locations:"
          find . -name "AndroidManifest.xml"

      - name: Install dependencies
        run: |
          flutter config --no-analytics
          flutter pub get

      - name: Build APK
        run: |
          cd android
          ./gradlew clean
          cd ..
          flutter clean
          flutter build apk --release --verbose

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/app/outputs/flutter-apk/app-release.apk
          tag_name: v1.0.${{ github.run_number }}
          name: Release v1.0.${{ github.run_number }}
          body: |
            Automated APK build
            Build number: ${{ github.run_number }}
            Commit: ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Generate QR Code
        run: |
          sudo apt-get update
          sudo apt-get install -y qrencode
          QR_URL="https://github.com/${{ github.repository }}/releases/download/v1.0.${{ github.run_number }}/app-release.apk"
          qrencode -o qr_apk.png "$QR_URL"
          echo "Download APK: $QR_URL" >> $GITHUB_STEP_SUMMARY

      - name: Upload QR Code
        uses: actions/upload-artifact@v4
        with:
          name: qr-code-v1.0.${{ github.run_number }}
          path: qr_apk.png
          retention-days: 90 